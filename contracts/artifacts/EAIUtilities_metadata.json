{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "getStakers",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalStakers",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "user",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "balance",
								"type": "uint256"
							}
						],
						"internalType": "struct WalletBalance[]",
						"name": "wallets",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "wallet",
						"type": "address"
					}
				],
				"name": "getTier",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_eai",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_staking",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tdeai",
						"type": "address"
					}
				],
				"name": "updateContractAddresses",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getStakers()": {
					"details": "Get a list of all stakers and checks how much tdEAI each wallet holds. Returns an unsorted list"
				},
				"getTier(address)": {
					"details": "Checks the EAI and tdEAI holding of a wallet and returns the balance as well as tier wallet falls"
				},
				"updateContractAddresses(address,address,address)": {
					"details": "this function updates contract addresses for eai, staking and tdeai. Only the owner is allowed and all addresses have to be provided"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/stakers.sol": "EAIUtilities"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/stakers.sol": {
			"keccak256": "0xd831c3ad126672431de99164d6e8db3dd31db07dcbb649631c0c215b61dbebd9",
			"license": "MIT",
			"urls": [
				"bzz-raw://2e996d58fcb37c4c671f9cfca8fe2dcbee361712c61e07551edcd72e218f90b1",
				"dweb:/ipfs/QmQ33K6NsXgnP43Ay6KfgaPFPxwHURU16RDpZyee98QGmC"
			]
		}
	},
	"version": 1
}